@model  IEnumerable<siliconTestMVC5.Models.Entities.Category>
@{
    ViewBag.Title = "Product Listing";
}
@using X.PagedList.Mvc;
@using X.PagedList;


<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/output-table-stiles.css" rel="stylesheet" type="text/css" />


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/Scripts/CategoriesHelp.js")


<h2>Products</h2>

@Html.DropDownList("select", ViewBag.SelectedList as SelectList)
@Html.DropDownList("tmpValue", new SelectList(Model, "Name", "Name"), "--Select a State--")

<script>
    $(document).ready(function () {
        $("#select").change(function () {
            var a = $("#select").val();
            var href = "/Elements/ProductsIndex?page=1&itemsCount=" + a + "&sortCase=" + @ViewBag.SortStatus;
            window.location.href = href;
        });
    });
</script>

<script>
    function orderColumn(columnNumber) {
        var currentStat = @ViewBag.SortStatus;
        var href = "/Elements/ProductsIndex?sortCase=" + (columnNumber * 10) + "&itemsCount=" + @ViewBag.ItemsCount;
        if (currentStat !== 0) {
            var chars = currentStat.toString().split('');
            if (chars[0] == columnNumber) {
                var sortType = !+parseInt(chars[1]);
                var outSort = columnNumber * 10 + sortType;
                href = "/Elements/ProductsIndex?sortCase=" + outSort + "&itemsCount=" + @ViewBag.ItemsCount;
            }
        }
        window.location.href = href;
    }
</script>

<table>
    <tr>
        <th onclick="orderColumn(1)">Name</th>
        <th>Description</th>
        <th onclick="orderColumn(2)">Price</th>
        <th onclick="orderColumn(3)">Count</th>
        <th>Image</th>
    </tr>
    @foreach (var product in ViewBag.OnePageOfProducts)
    {
        <tr>
            <td>@product.Name</td>
            <td>@product.Description</td>
            <td>@product.Price</td>
            <td>@product.Count</td>

            @{var imgSrc = @Url.Content("~/images/box.png");}
            @if (@product.Image != null)
            {
                var base64 = Convert.ToBase64String(@product.Image);
                imgSrc = String.Format("data:image/png;base64,{0}", base64);
            }

            <td><img src="@imgSrc" width="100" height="100"></td>
        </tr>
    }

</table>

@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("ProductsIndex", new { page, sortCase = @ViewBag.SortStatus, itemsCount = @ViewBag.ItemsCount }))