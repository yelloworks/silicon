@{
    ViewBag.Title = "Product Listing";
}
@using X.PagedList.Mvc; 
@using X.PagedList;

<!-- import the included stylesheet for some (very basic) default styling -->
<style type="text/css">.selector { }</style>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/output-table-stiles.css" rel="stylesheet" type="text/css" />


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/Scripts/CategoriesHelp.js")

<!-- loop through each of your products and display it however you want. we're just printing the name here -->
<h2>Products</h2>
@{ int a = 0;}
@Html.DropDownList("value", ViewBag.SelectedList as SelectList, new {onchange = @Url.Action("ProductsIndex", new { ViewBag.CurrentPage, ViewBag.ItemsCount })})
@*<script>
    $(document).ready(function () {
        $(".selector").change(function () {

            var a = $(".selector").val();
            alert($(".selector").val());
            @Url.Action("ProductsIndex", new { ViewBag.CurrentPage, });
        });
    });
</script>*@

<script>
    function TryTo() {
        alert("ddddddd");
    };
</script>

<table>
    <tr>
        <th>Name</th>
        <th>Description</th>
        <th>Price</th>
        <th>Count</th>
        <th>Image</th>
    </tr>
    @foreach (var product in ViewBag.OnePageOfProducts)
    {
    <tr>
        <td>@product.Name</td>
        <td>@product.Description</td>
        <td>@product.Price</td>
        <td>@product.Count</td>

        @{var imgSrc = @Url.Content("~/images/box.png");}
        @if (@product.Image != null)
        {
            var base64 = Convert.ToBase64String(@product.Image);
            imgSrc = String.Format("data:image/png;base64,{0}", base64);
        }

        <td><img src="@imgSrc" width="100" height="100"></td>
    </tr>
    }

</table>
<>

<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("ProductsIndex", new { page, ViewBag.ItemsCount }))